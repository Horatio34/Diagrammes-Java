/*******
Etape
*******/

/*
* Données : Le code, le libellé et les ECTS de l'étape
* Fonction : Initialisation de l'étape
* Résultat : Initialise les variables et instancie les listes spécifiques à l'étape.
*/

setECTS_Etape(int ECTS_Et)
/*
* Données : Un entier correspondant à un nombre d'ECTS
* Fonction : Modification du nombre d'ECTS de l'étape
* Résultat : Le nombre d'ECTS de l'étape sont modifiées
*/

setListe_Etudiant_Mention_Etape(Vector<Struct_mention> liste_etudiant_mention)
/*
* Données : Une liste d'étudiants avec leur mention pour l'étape
* Fonction : Modification de la liste des mentions des élèves
* Résultat : La liste des élève et leur mention est modifiée
*/

setListe_Semestres(Vector<Semestre> liste)
/*
* Données : Une liste de semestres
* Fonction : Modification de la liste de semestres de l'étape
* Résultat : Les semestres de l'étape sont modifiés
*/

getECTS_Etape()
/*
* Données : Aucunes
* Fonction : Retourne les ECTS de l'étape
* Résultat : Renvoi des ECTS de l'étape à la fonction appelante
*/

Vector<Struct_mention> getListe_Etudiant_Mention_Etape()
/*
* Données : Aucunes
* Fonction : Retourne la liste des élèves et leur mention pour l'étape
* Résultat : Renvoi des élèves et de leur mention à la fonction appelante
*/

Vector<Semestre> getListe_Semestres()
/*
* Données : Aucunes
* Fonction : Retourne la liste des semestre de l'étape
* Résultat : Renvoi de la liste des semestres à la fonction appelante
*/

/*******
Semestre
*******/

/*
* Données : Le code, le libellé et les ECTS du semestre
* Fonction : Initialisation du semestre
* Résultat : Initialise les variables et instancie les listes spécifiques au semestre.
*/

setECTS_Sem(int ECTS_Et)
/*
* Données : Un entier correspondant à un nombre d'ECTS
* Fonction : Modification du nombre d'ECTS du semestre
* Résultat : Le nombre d'ECTS du semestre sont modifiées
*/

setListe_pts_jury_sem(Vector<Struct_note> liste_pts_jury)
/*
* Données : Une liste d'étudiants avec les points jurys qui leur ont été attribués
* Fonction : Modification du nombre des points jurys des étudiants pour le semestre
* Résultat : Les points jurys des étudiants sont modifiées pour le semestre
*/

setListe_etudiant_mention_sem(Vector<Struct_mention> liste_etudiant_mention)
/*
* Données : Une liste d'étudiants du semestre avec leur mention 
* Fonction : Modification de la liste des mentions des élèves
* Résultat : La liste des élève du semestre et leur mention est modifiée
*/

setListe_UE(Vector<UE> liste)
/*
* Données : Une liste d'UE
* Fonction : Modification de la liste d'UE pour le semestres
* Résultat : La liste des UE du semestre sont modifiées
*/

setListe_UE_Obli(Vector<UE> liste)
/*
* Données : Une liste de d'UE
* Fonction : Modification de la liste des UE obligatoires pour le semestre
* Résultat : La liste des UE obligatoires du semestre sont modifiées
*/

getECTS_Sem()
/*
* Données : Aucunes
* Fonction : Retourne les ECTS de du semestre
* Résultat : Renvoi des ECTS du semestre à la fonction appelante
*/

Vector<Struct_note> getListe_pts_jury_sem()
/*
* Données : Aucunes
* Fonction : Retourne la liste des étudiants du semestre, avec les points jurys associés 
* Résultat : Renvoi des ECTS du semestre à la fonction appelante
 */

Vector<Struct_mention> getListe_Etudiant_Mention_sem()
/*
* Données : Aucunes
* Fonction : Retourne la liste des élèves et leur mention pour semestre
* Résultat : Renvoi des élèves du semestre et de leur mention à la fonction appelante
*/

Vector<UE> getListe_UE()
/*
* Données : Aucunes
* Fonction : Retourne la liste des UE du semestre
* Résultat : Renvoi de la liste des UE du semestre à la fonction appelante
*/

Vector<UE> getListe_UE_Obli()
/*
** Données : Aucunes
** Fonction : Retourne la liste des UE obligatoires du semestre
** Résultat : Renvoi de la liste des UE  obligatoires du semestre à la fonction appelante
*/

/*******
UE
*******/
/*
* Données : Le code, le libellé et les ECTS de l'UE
* Fonction : Initialisation de l'UE
* Résultat : Initialise les variables et instancie les listes spécifiques à l'UE.
*/

remplir_liste_etudiant_moyenne() 
/*
* Données : Aucunes
* Fonction : Remplit la liste contenant les étudiants et leur moyenne pour l'UE
* Résultat : La liste est initialisée et remplie de tous les étudiants de l'UE et de leur moyenne respective.
*/

remplir_liste_etudiant_mention()
/*
* Données : Aucunes
* Fonction : Remplit la liste contenant les étudiants et leur mention pour l'UE
* Résultat : La liste est initialisée et remplie de tous les étudiants de l'UE et de leur mention respective.
*/

setListe_etudiant_moyenne(Vector<Struct_note> liste_etudiant_moyenne)
/*
* Données : Une liste d'étudiants avec leur moyenne pour l'UE
* Fonction : Donne une nouvelle liste d'étudiants avec leur moyenne pour l'UE
* Résultat : La liste est modifiée avec les nouvelles moyennes.
*/

setListe_pts_jury_UE(Vector<Struct_note> liste_pts_jury)
/*
* Données : Une liste d'étudiants avec les points jurys qui leur ont été attribués pour l'UE
* Fonction : Modification du nombre des points jurys des étudiants pour l'UE
* Résultat : Les points jurys des étudiants sont modifiées pour l'UE
*/

setECTS_Sem(int ECTS_Et)
/*
* Données : Un entier correspondant à un nombre d'ECTS
* Fonction : Modification du nombre d'ECTS de l'UE
* Résultat : Le nombre d'ECTS de l'UE sont modifiées
*/

setListe_etudiant_moyenne_sem(Vector<Struct_mention> liste_etudiant_mention)
/*
* Données : Une liste d'étudiants de l'UE avec leur moyenne 
* Fonction : Modification de la liste des moyennes des élèves
* Résultat : La liste des élèves et de leur moyennes pour l'UE est modifiée
*/

setListe_etudiant_mention_sem(Vector<Struct_mention> liste_etudiant_mention)
/*
* Données : Une liste d'étudiants de l'UE avec leur mention 
* Fonction : Modification de la liste des mentions des élèves
* Résultat : La liste des élèves et de leur mention pour l'UE est modifiée
*/

getECTS_Sem()
/*
* Données : Aucunes
* Fonction : Retourne les ECTS de L'UE
* Résultat : Renvoi des ECTS de l'UE à la fonction appelante
*/

Vector<Struct_note> getListe_etudiant_moyenne()
/*
* Données : Une liste d'étudiants avec leur moyenne pour l'UE
* Fonction : Modification de la liste des moyennes des élèves
* Résultat : La liste des élèves et de leur moyenne pour l'UE est modifiée
*/

Vector<Struct_mention> getListe_pts_jurys_Mention_sem()
/*
* Données : Une liste d'étudiants avec leur mention pour l'UE
* Fonction : Retourne la liste des élèves et leur mention pour l'UE
* Résultat : Renvoi des élèves de l'UE et de leur mention à la fonction appelante
*/

Vector<Struct_note> getListe_pts_jury_sem()
/*
* Données : Une liste d'étudiants avec leurs points jurys pour l'UE
* Fonction : Retourne la liste des étudiants de l'UE, avec les points jurys associés 
* Résultat : Renvoi des points jurys de l'UE à la fonction appelante
*/

Vector<UE> getListe_ECUE()
/*
* Données : Aucunes
* Fonction : Retourne la liste des ECUE de l'UE
* Résultat : Renvoi de la liste des ECUE de l'UE à la fonction appelante
*/

setListe_UE(Vector<ECUE> liste)
/*
* Données : Une liste d'ECUE
* Fonction : Modification de la liste d'ECUE pour l'UE
* Résultat : La liste des ECUE de l'UE sont modifiées
*/

float getMoyenneEtudiantUE(String code)
/*
* Données : Un code d'étudiant
* Fonction : Retrouve l'étudiant dans la liste associée et renvoie sa note pour l'UE
* Résultat :  Renvoi de la note de l'étudiant pour l'UE
*/

getPtsJuryEtudiantUE(String code)
/*
* Données : Un code d'étudiant
* Fonction : Retrouve l'étudiant dans la liste associée et renvoie ses points jurys pour l'UE
* Résultat :  Renvoi des points jurys de l'étudiant pour l'UE
*/

